{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZLILDANIELPC\\\\Desktop\\\\zlil_shared_dir\\\\whatsApp - serg\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Messages } from './Messages';\nimport { Chats } from './Chats';\nimport { Panes, Pane } from './Panes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  let [chats, setChats] = useState([]);\n  let [selectedId, setSelectedId] = useState(null);\n  let [messages, setMessages] = useState([]);\n  let [lastPoll, setLastPoll] = useState(Date.now());\n  useEffect(() => {\n    import('./data/chats.js').then(module => {\n      let chats = module.chats;\n      setChats(module.posts);\n      setSelectedId(chats[0].id);\n    });\n  }, []); // useEffect(() => {\n  //   fetch('https://jsonplaceholder.typicode.com/posts')\n  //     .then(res => res.json())\n  //     .then((posts) => setPosts(posts))\n  // }, []);\n\n  useEffect(() => {\n    if (!selectedId) {\n      return;\n    }\n\n    import(`./data/messages_${selectedId}.js`).then(module => {\n      let messages = module.messages;\n      setMessages(messages);\n    });\n  }, [selectedId], lastPoll); //       fetch(`https://jsonplaceholder.typicode.com/comments?postId=${selectedId}`)\n  //       .then(res => res.json())\n  //       .then((comments) => setComments(comments))\n  //   }, [selectedId]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLastPoll(Date.now());\n    }, 1000);\n  }, [lastPoll]);\n  let selectedChat = chats.find(p => p.id === selectedId);\n  return /*#__PURE__*/_jsxDEV(Panes, {\n    children: [/*#__PURE__*/_jsxDEV(Pane, {\n      width: '35%',\n      minWidth: '300px',\n      header: `All Chats (lastPoll: ${lastPoll})`,\n      body: /*#__PURE__*/_jsxDEV(Chats, {\n        chats: chats,\n        onSelectChat: setSelectedId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pane, {\n      width: '65%',\n      header: `${selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.title} (${selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id})`,\n      body: /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"Ir5m9muy5Useg9F0s2V3HPmFcHE=\");\n\n_c = App;\n\nfunction addFakeMessage(messages) {\n  let messageBeforeLast = messages[messages.length - 2];\n  let newMessage = { ...messageBeforeLast,\n    id: Date.now()\n  };\n  messages.push(newMessage);\n  return messages;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ZLILDANIELPC/Desktop/zlil_shared_dir/whatsApp - serg/src/App.jsx"],"names":["React","useEffect","useState","Messages","Chats","Panes","Pane","App","chats","setChats","selectedId","setSelectedId","messages","setMessages","lastPoll","setLastPoll","Date","now","then","module","posts","id","setTimeout","selectedChat","find","p","title","addFakeMessage","messageBeforeLast","length","newMessage","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Messages } from './Messages';\r\nimport { Chats } from './Chats'; \r\nimport { Panes, Pane } from './Panes';\r\n\r\nexport function App() {\r\n    let [chats, setChats] = useState([]);\r\n    let [selectedId, setSelectedId] = useState(null);\r\n    let [messages, setMessages] = useState([]);\r\n    let [lastPoll, setLastPoll] = useState(Date.now());\r\n  \r\nuseEffect(() => {\r\n    import('./data/chats.js')\r\n        .then(module => {\r\n            let chats = module.chats;\r\n            setChats(module.posts);\r\n            setSelectedId(chats[0].id);\r\n        });\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //   fetch('https://jsonplaceholder.typicode.com/posts')\r\n    //     .then(res => res.json())\r\n    //     .then((posts) => setPosts(posts))\r\n    // }, []);\r\n  \r\n    useEffect(() => {\r\n      if (!selectedId) {\r\n        return;\r\n      }\r\n      import(`./data/messages_${selectedId}.js`)\r\n        .then(module => {\r\n            let messages = module.messages;\r\n            setMessages(messages);\r\n        })\r\n      }, [selectedId], lastPoll);\r\n//       fetch(`https://jsonplaceholder.typicode.com/comments?postId=${selectedId}`)\r\n//       .then(res => res.json())\r\n//       .then((comments) => setComments(comments))\r\n//   }, [selectedId]);\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        setLastPoll(Date.now());\r\n    }, 1000);\r\n}, [lastPoll]);\r\n    \r\n  let selectedChat = chats.find((p) => p.id === selectedId);\r\n  \r\n    return <Panes>\r\n        <Pane width={'35%'} minWidth={'300px'}\r\n         header={`All Chats (lastPoll: ${lastPoll})`}\r\n         body={<Chats chats={chats} onSelectChat={setSelectedId}></Chats>}>\r\n      </Pane>\r\n      <Pane width={'65%'}\r\n        header={`${selectedChat?.title} (${selectedChat?.id})`}\r\n        body={<Messages messages={messages}></Messages>}>\r\n      </Pane>\r\n    </Panes>;\r\n  }\r\n  \r\n  function addFakeMessage(messages) {\r\n    let messageBeforeLast = messages[messages.length - 2];\r\n    let newMessage = {...messageBeforeLast, id: Date.now()};\r\n    messages.push(newMessage);\r\n    return messages;\r\n  } "]},"metadata":{},"sourceType":"module"}