{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZLILDANIELPC\\\\Desktop\\\\zlil_shared_dir\\\\whatsApp - serg\\\\src\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction Comments(props) {\n  if (!props.post || !props.comments) {\n    return '';\n  }\n\n  let commentStyle = {\n    border: '2px solid',\n    padding: '0.5em'\n  };\n  let titletStyle = {\n    padding: '0.5em',\n    color: 'blue',\n    textAlign: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: titletStyle,\n      children: [props.post.title, \" (\", props.post.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: commentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"postId: \", comment.postId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"name: \", comment.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"email: \", comment.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Comments;\nlet Post = styled.div(_c2 = props => ({\n  border: '2px solid',\n  padding: '0.5em',\n  cursor: \"pointer\"\n}));\n_c3 = Post;\n\nfunction Posts(props) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        style: postStyle,\n        onClick: () => props.onSelectPost(post.id),\n        children: [post.title, \" (\", post.id, \")\"]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = Posts;\nlet Panes = styled.div({\n  display: 'flex',\n  width: '100vw',\n  height: '100vh'\n});\nlet Pane = styled.div(_c5 = props => ({\n  overFlow: 'auto',\n  ...props\n})); // function GeRandomColor(props){\n//   var randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n//   return <h1 style={{color: randomColor}} >{props.children}</h1>;\n// }\n// function ItalicText(props) {\n//   return <i>\n//     {props.children}\n//   </i>;\n// }\n// function boldText(props) {\n//   return <b>\n//     {props.children}\n//   </b>;\n// }\n\n_c6 = Pane;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"Post$styled.div\");\n$RefreshReg$(_c3, \"Post\");\n$RefreshReg$(_c4, \"Posts\");\n$RefreshReg$(_c5, \"Pane$styled.div\");\n$RefreshReg$(_c6, \"Pane\");","map":{"version":3,"sources":["C:/Users/ZLILDANIELPC/Desktop/zlil_shared_dir/whatsApp - serg/src/index.js"],"names":["React","useEffect","useState","ReactDOM","App","render","document","getElementById","Comments","props","post","comments","commentStyle","border","padding","titletStyle","color","textAlign","title","id","map","comment","postId","name","email","body","Post","styled","div","cursor","Posts","posts","postStyle","onSelectPost","Panes","display","width","height","Pane","overFlow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nfunction Comments(props) {\n  if (!props.post || !props.comments) {\n    return '';\n  }\n  let commentStyle = {\n    border: '2px solid',\n    padding: '0.5em'\n  };\n  let titletStyle = {\n    padding: '0.5em',\n    color: 'blue',\n    textAlign: 'center'\n  };\n  return <div>\n    <h2 style={titletStyle}>{props.post.title} ({props.post.id})</h2> \n    <ul>\n      {props.comments.map(comment => <div key={comment.id} style={commentStyle}>\n        <p>postId: {comment.postId}</p>\n        <p>name: {comment.name}</p>\n        <p>email: {comment.email}</p>\n        <p>{comment.body}</p>\n      </div>)}\n    </ul>\n  </div>\n}\n\nlet Post = styled.div(props => ({\n    border: '2px solid',\n    padding: '0.5em',\n    cursor: \"pointer\"\n}));\n\nfunction Posts(props) {\n  return <ul>\n    {props.posts.map(post => {\n      return <Post style={postStyle} key={post.id} onClick={() => props.onSelectPost(post.id)}>\n      {post.title} ({post.id})\n      </Post>\n    })}\n  </ul>\n}\n\nlet Panes = styled.div({\n  display: 'flex',\n  width: '100vw',\n  height: '100vh'\n});\n\nlet Pane = styled.div(props => ({\n  overFlow: 'auto',\n  ...props\n}));\n\n\n\n\n\n\n// function GeRandomColor(props){\n//   var randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n//   return <h1 style={{color: randomColor}} >{props.children}</h1>;\n// }\n\n// function ItalicText(props) {\n//   return <i>\n//     {props.children}\n//   </i>;\n// }\n\n// function boldText(props) {\n//   return <b>\n//     {props.children}\n//   </b>;\n// }\n"]},"metadata":{},"sourceType":"module"}