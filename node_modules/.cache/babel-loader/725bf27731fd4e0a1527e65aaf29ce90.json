{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZLILDANIELPC\\\\Desktop\\\\zlil_shared_dir\\\\whatsApp - serg\\\\react-for-whatsapp\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //?\n\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction App() {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n  let [selectedId, setSelectedId] = useState(1);\n  let [comments, setComments] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => setPosts(posts));\n  }, []);\n  useEffect(() => {\n    if (!selectedId) {\n      return;\n    }\n\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${selectedId}`).then(res => res.json()).then(comments => setComments(comments));\n  }, [selectedId]);\n  let selectedPost = posts.find(p => p.id === selectedId);\n  return /*#__PURE__*/_jsxDEV(Panes, {\n    children: [/*#__PURE__*/_jsxDEV(Pane, {\n      width: '35%',\n      minWidth: '300px',\n      children: /*#__PURE__*/_jsxDEV(Posts, {\n        posts: posts,\n        onSelectPost: setSelectedId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pane, {\n      width: '65%',\n      children: /*#__PURE__*/_jsxDEV(Comments, {\n        post: selectedPost,\n        comments: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"4dKrbfvlMKPD8AsF6rDt+6Stj/k=\");\n\n_c = App;\n\nfunction Comments(props) {\n  if (!props.post || !props.comments) {\n    return '';\n  }\n\n  let commentStyle = {\n    border: '1px solid',\n    padding: '0.5em'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [props.post.title, \" (\", props.post.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: commentStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"postId: \", comment.postId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"name: \", comment.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"email: \", comment.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Comments;\n\nfunction Posts(props) {\n  let postStyle = {\n    border: '1px solid',\n    padding: '0.5em',\n    cursor: \"pointer\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: postStyle,\n        onClick: () => props.onSelectPost(post.id),\n        children: [post.title, \" (\", post.id, \")\"]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = Posts;\n\nfunction Panes(props) {\n  let mainStyle = {\n    display: 'flex',\n    width: '100vw',\n    height: '100vh'\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: mainStyle,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n\n_c4 = Panes;\n\nfunction Pane(props) {\n  let paneStyle = {\n    overFlow: 'auto',\n    ...props\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: paneStyle,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n} // function GeRandomColor(props){\n//   var randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n//   return <h1 style={{color: randomColor}} >{props.children}</h1>;\n// }\n// function ItalicText(props) {\n//   return <i>\n//     {props.children}\n//   </i>;\n// }\n// function boldText(props) {\n//   return <b>\n//     {props.children}\n//   </b>;\n// }\n\n\n_c5 = Pane;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Comments\");\n$RefreshReg$(_c3, \"Posts\");\n$RefreshReg$(_c4, \"Panes\");\n$RefreshReg$(_c5, \"Pane\");","map":{"version":3,"sources":["C:/Users/ZLILDANIELPC/Desktop/zlil_shared_dir/whatsApp - serg/react-for-whatsapp/src/index.js"],"names":["React","useEffect","useState","ReactDOM","render","document","getElementById","App","posts","setPosts","selectedId","setSelectedId","comments","setComments","fetch","then","res","json","selectedPost","find","p","id","Comments","props","post","commentStyle","border","padding","title","map","comment","postId","name","email","body","Posts","postStyle","cursor","onSelectPost","Panes","mainStyle","display","width","height","children","Pane","paneStyle","overFlow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';//?\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nfunction App() {\n  let [posts, setPosts] = useState([]);\n  let [selectedId, setSelectedId] = useState(1);\n  let [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(res => res.json())\n      .then((posts) => setPosts(posts))\n  }, []);\n\n  useEffect(() => {\n    if (!selectedId) {\n      return;\n    }\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${selectedId}`)\n    .then(res => res.json())\n    .then((comments) => setComments(comments))\n}, [selectedId]);\n  \nlet selectedPost = posts.find((p) => p.id === selectedId);\n\n  return <Panes>\n      <Pane width={'35%'} minWidth={'300px'}>\n      <Posts posts={posts} onSelectPost={setSelectedId}></Posts>\n    </Pane>\n    <Pane width={'65%'}>\n      <Comments post={selectedPost} comments={comments}></Comments>\n    </Pane>\n  </Panes>;\n}\n\nfunction Comments(props) {\n  if (!props.post || !props.comments) {\n    return '';\n  }\n  let commentStyle = {\n    border: '1px solid',\n    padding: '0.5em'\n  };\n  return <div>\n    <h2>{props.post.title} ({props.post.id})</h2>\n    <ul>\n      {props.comments.map(comment => <div key={comment.id} style={commentStyle}>\n        <p>postId: {comment.postId}</p>\n        <p>name: {comment.name}</p>\n        <p>email: {comment.email}</p>\n        <p>{comment.body}</p>\n      </div>)}\n    </ul>\n  </div>\n}\n\nfunction Posts(props) {\n  let postStyle = {\n    border: '1px solid',\n    padding: '0.5em',\n    cursor: \"pointer\"\n  }\n  return <ul>\n    {props.posts.map(post => {\n      return <div style={postStyle} key={post.id} onClick={() => props.onSelectPost(post.id)}>\n      {post.title} ({post.id})\n      </div>\n    })}\n  </ul>\n}\n\nfunction Panes(props) {\n  let mainStyle = {\n    display: 'flex',\n    width: '100vw',\n    height: '100vh'\n  };\n  return <main style={mainStyle}>{props.children}</main>\n}\n\nfunction Pane(props) {\n  let paneStyle = {\n    overFlow: 'auto',\n    ...props\n  }\n  return <div style={paneStyle}>{props.children}</div>\n}\n\n\n\n\n\n\n// function GeRandomColor(props){\n//   var randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n//   return <h1 style={{color: randomColor}} >{props.children}</h1>;\n// }\n\n// function ItalicText(props) {\n//   return <i>\n//     {props.children}\n//   </i>;\n// }\n\n// function boldText(props) {\n//   return <b>\n//     {props.children}\n//   </b>;\n// }\n"]},"metadata":{},"sourceType":"module"}